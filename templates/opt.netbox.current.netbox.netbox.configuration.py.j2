# {{ ansible_managed }}

# This is a list of valid fully-qualified domain names (FQDNs) for the NetBox server. NetBox will not permit write
# access to the server via any other hostnames. The first FQDN in the list will be treated as the preferred name.
#
# Example: ALLOWED_HOSTS = ['netbox.example.com', 'netbox.internal.local']
ALLOWED_HOSTS = ['{{ netbox_url }}']

# PostgreSQL database configuration.
DATABASE = {
    'NAME':             '{{ netbox_database.db }}',      # Database name
    'USER':             '{{ netbox_database.username }}',      # PostgreSQL username
    'PASSWORD':         '{{ netbox_database.password }}',      # PostgreSQL password
    'HOST':             '{{ netbox_database.hostname }}',      # Database server
    'PORT':             '',                              # Database port (leave blank for default)
}

SECRET_KEY = '{{ netbox_secret_key }}'


ADMINS = [
    # ['John Doe', 'jdoe@example.com'],
]

# Email settings
EMAIL = {
    'SERVER': 'localhost',
    'PORT': 25,
    'USERNAME': '',
    'PASSWORD': '',
    'TIMEOUT': 10,  # seconds
    'FROM_EMAIL': '',
}

LOGIN_REQUIRED = True

BASE_PATH = ''

MAINTENANCE_MODE = False

# Credentials that NetBox will use to access live devices.
NETBOX_USERNAME = ''
NETBOX_PASSWORD = ''

# Determine how many objects to display per page within a list. (Default: 50)
PAGINATE_COUNT = 50

# Time zone (default: UTC)
TIME_ZONE = 'EST'

# Date/time formatting. See the following link for supported formats:
# https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
DATE_FORMAT = 'N j, Y'
SHORT_DATE_FORMAT = 'Y-m-d'
TIME_FORMAT = 'g:i a'
SHORT_TIME_FORMAT = 'H:i:s'
DATETIME_FORMAT = 'N j, Y g:i a'
SHORT_DATETIME_FORMAT = 'Y-m-d H:i'

# Optionally display a persistent banner at the top and/or bottom of every page. To display the same content in both
# banners, define BANNER_TOP and set BANNER_BOTTOM = BANNER_TOP.
BANNER_TOP = ''
BANNER_BOTTOM = ''

# When determining the primary IP address for a device, IPv6 is preferred over IPv4 by default. Set this to True to
# prefer IPv4 instead.
PREFER_IPV4 = True

# Enforcement of unique IP space can be toggled on a per-VRF basis. To enforce unique IP space within the global table
# (all prefixes and IP addresses not assigned to a VRF), set ENFORCE_GLOBAL_UNIQUE to True.
ENFORCE_GLOBAL_UNIQUE = False
