---

- include: amzn2.yml
  when: ansible_distribution == 'Amazon'

- include: centos7.yml
  when:
    - ansible_distribution_major_version == "7"
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- include: centos8.yml
  when:
    - ansible_distribution_major_version == "8"
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- include: ubuntu.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: ['netbox']

- name: ensure netbox user exists
  user: name="{{ netbox_user }}"
  tags: ['netbox']

- name: ensure netbox dirs exist
  file:
    dest: "{{ netbox_base_dir }}"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_user }}"
    mode: 0710
    state: directory
  tags: ['netbox']

- name: check if netbox is already installed
  stat: path="{{ netbox_base_dir }}/netbox-{{ netbox_version }}"
  register: netbox_found
  tags: ['netbox']

- name: download netbox source
  get_url: url=https://github.com/digitalocean/netbox/archive/v{{ netbox_version }}.tar.gz dest=/usr/src/netbox-{{ netbox_version }}.tar.gz
  when: netbox_found.stat.exists == false
  tags: ['netbox']

- name: untar netbox
  become_user: "{{ netbox_user }}"
  shell: "tar zx -C {{ netbox_base_dir }} -f /usr/src/netbox-{{ netbox_version }}.tar.gz"
  when: netbox_found.stat.exists == false
  tags: ['netbox']

- name: place netbox symlink
  file:
    src: "{{ netbox_base_dir }}/netbox-{{ netbox_version }}"
    dest: "{{ netbox_base_dir }}/current"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_user }}"
    state: link
  tags: ['netbox']

- name: place netbox config
  template:
    src: "opt.netbox.current.netbox.netbox.{{ item }}.py.j2"
    dest: "{{ netbox_base_dir }}/current/netbox/netbox/{{ item }}.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_user }}"
    mode: 0600
  with_items:
    - configuration
  tags: ['netbox']

- name: place gunicorn netbox config
  template:
    src: opt.netbox.current.gunicorn_config.py.j2
    dest: "{{ netbox_base_dir }}/current/gunicorn_config.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_user }}"
    mode: 0600
  tags: ['netbox']

- name: install netbox python modules
  become_user: "{{ netbox_user }}"
  pip:
    requirements: "{{ netbox_base_dir }}/current/requirements.txt"
    virtualenv: "{{ netbox_base_dir }}/venv"
    virtualenv_command: "{{ netbox_virtualenv_command }}"
  tags: ['netbox']

- name: install gunicorn inside venv
  become_user: "{{ netbox_user }}"
  pip:
    name: gunicorn
    virtualenv: "{{ netbox_base_dir }}/venv"
    virtualenv_command: "{{ netbox_virtualenv_command }}"
  tags: ['netbox']

- include: ldap.yml
  when: netbox_ldap_config.enabled

- name: place nginx config
  template:
    src: etc.nginx.nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: "root"
    group: "root"
    mode: 0400
  tags: ['netbox']

# changed_when: False to stop idempotence checks from breaking
- name: run netbox DB migrations
  become_user: "{{ netbox_user }}"
  command: "{{ item }}"
  with_items:
    - "{{ netbox_base_dir }}/venv/bin/python3 {{ netbox_base_dir }}/current/netbox/manage.py migrate"
    - "{{ netbox_base_dir }}/venv/bin/python3 {{ netbox_base_dir }}/current/netbox/manage.py remove_stale_contenttypes --no-input"
    - "{{ netbox_base_dir }}/venv/bin/python3 {{ netbox_base_dir }}/current/netbox/manage.py clearsessions"
  when: netbox_run_db_migrations
  changed_when: False
  tags: ['netbox']

- name: run netbox non-DB migrations
  become_user: "{{ netbox_user }}"
  command: "{{ item }}"
  with_items:
    - "{{ netbox_base_dir }}/venv/bin/python3 {{ netbox_base_dir }}/current/netbox/manage.py collectstatic --no-input"
    - "{{ netbox_base_dir }}/venv/bin/python3 {{ netbox_base_dir }}/current/netbox/manage.py invalidate all"
  when: netbox_run_other_migrations
  changed_when: False
  tags: ['netbox']

- include: service.yml
